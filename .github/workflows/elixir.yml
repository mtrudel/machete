name: Elixir CI

on: [push, pull_request]

env:
  MIX_ENV: test

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir:  1.11.4
            otp: 23.3.4
          - elixir:  1.11.4
            otp: 24.3.4.5

          - elixir:  1.12.3
            otp: 23.3.4
          - elixir:  1.11.4
            otp: 24.3.4.5

          - elixir:  1.13.4
            otp: 23.3.4
          - elixir:  1.13.4
            otp: 24.3.4.5
          - elixir:  1.13.4
            otp: 25.1

          - elixir:  1.14.0
            otp: 24.3.4.5
          - elixir:  1.14.0
            otp: 25.1
            lint: true
    steps:
    - uses: actions/checkout@v2

    - name: Setup elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Retrieve Mix Dependencies Cache
      uses: actions/cache@v1
      id: mix-cache
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Install Mix Dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Check Formatting
      if: ${{ matrix.lint }}
      run: mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

    - name: Retrieve PLT Cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt

    - name: Run dialyzer
      run: mix dialyzer --no-check

    - name: Run Tests
      run: mix test
